---
- name: Create directory for wordpress sites
  file:
    path: /var/www/wordpress/
    state: directory

- name: Create directory for site files
  file:
    path: /var/www/wordpress/{{domain}}
    state: directory

- name: delete directory for php site being replaced
  file:
    path: /var/www/php/{{domain}}
    state: absent

- name: Download WordPress
  get_url:
    url=https://wordpress.org/latest.tar.gz
    dest=/tmp/wordpress.tar.gz
    validate_certs=no

- name: Extract WordPress
  unarchive: src=/tmp/wordpress.tar.gz dest=/tmp copy=no
  become: yes

- name: Syncronize Wordpress install files with server directory
  synchronize:
    src: /tmp/wordpress/
    dest: /var/www/wordpress/{{domain}}/
  delegate_to: "{{ inventory_hostname }}"

- name: delete tmp directory for wordpress install files
  file:
    path: /tmp/wordpress
    state: absent

- name: delete tmp file for wordpress install files
  file:
    path: /tmp/wordpress.tar.gz
    state: absent

- name: Fetch random salts for WordPress config
  command: curl https://api.wordpress.org/secret-key/1.1/salt/
  register: "wp_salt"
  become: no

- name: Add wp-config
  template: "src=wp-config.php dest=/var/www/wordpress/{{domain}}/wp-config.php"
  become: yes

- name: Make domain user owner of directory with site
  file: dest=/var/www/wordpress/{{domain}} owner={{domain}} group={{domain}} mode=u=rwX,g=rX,o=rX recurse=yes

- name: Re-create nginx config file
  template: "src=../templates/default-site-wordpress-http.conf dest=/etc/nginx/sites-available/{{domain}} owner=www-data group=www-data mode=0644"
  become: yes

- name: Enable site
  file: src=/etc/nginx/sites-available/{{domain}} dest=/etc/nginx/sites-enabled/{{domain}} owner=www-data group=www-data state=link
  notify:
    - restart nginx
    - restart php-fpm
  become: yes

- name: Check if wp-cli exists
  stat: path="{{ root_bin }}/wp"
  register: wpcli_exist

- name: Download and Install WP-CLI
  get_url:
    url="https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar"
    dest="{{ root_bin }}/wp"
    force_basic_auth=yes
    mode=0755
  when: not wpcli_exist.stat.exists

- name: Initialize Wordpress site
  command: "chdir=/var/www/wordpress/{{domain}} wp core install --url={{domain}} --title={{domain}} --admin_user={{wpuser}} --admin_password={{ lookup('password', 'credentials/' + domain + '/wp_'+ wpuser +'_password.txt') }} --admin_email={{wpmail}}"
  become: yes
  become_user: "{{domain}}"
  become_method: su

- name: Install Wordfence
  command: "chdir=/var/www/wordpress/{{domain}} wp plugin install wordfence --activate"
  become: yes
  become_user: "{{domain}}"
  become_method: su

- name: Create cronjob for Wordpress core update
  cron:
    name: "{{domain}} wordpress update"
    minute: "40"
    hour: "10"
    user: "{{domain}}"
    job: "/usr/local/bin/wp core update --path=/var/www/wordpress/{{domain}}/ >> /var/www/wordpress/update_logs/{{domain}}.log"

- name: Create cronjob for Wordpress plugins update
  cron:
    name: "{{domain}} plugins update"
    minute: "50"
    hour: "10"
    user: "{{domain}}"
    job: "/usr/local/bin/wp plugin update --path=/var/www/wordpress/{{domain}}/ >> /var/www/wordpress/update_logs/{{domain}}.log"

- name: Create cronjob for cleaning logs weekly
  cron:
    name: "{{domain}} clean logs"
    minute: "0"
    hour: "10"
    weekday: "7"
    user: "{{domain}}"
    job: "/bin/echo '' > /var/www/wordpress/update_logs/{{domain}}.log"

- name: Store variable with site type
  shell: echo "wordpress"
  register: site
